package com.gl.microservice.client;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class CourseController {

    @Autowired
    private CourseService courseService;

    @PostMapping("/course/add")
    public ResponseEntity add(Course course) {
    	courseService.add(course);
        return ResponseEntity.status(HttpStatus.OK).body(course);
    }

    @GetMapping("/course/getall")
    public ResponseEntity<List<Course>> getAll() {
        List<Course> courses = courseService.getAll();
        return ResponseEntity.ok(courses);
    }

    @GetMapping("/course/getbyid")
    public ResponseEntity<?> getById(@RequestParam int id) {
        try {
            Course course = courseService.getById(id);
            if (course != null) {
                return ResponseEntity.ok(course);
            }
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Course not found");
        } catch (Exception ex) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Course not found");
        }
    }

    @PutMapping("/course/update")
    public ResponseEntity<String> update(@RequestParam int id, @RequestParam String name, @RequestParam double fees) {
        Course course = courseService.getById(id);
        if (course == null) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Course not found");
        }
        course.setName(name);
        course.setFees(fees);
        courseService.update(course);
        return ResponseEntity.ok("Course updated successfully");
    }

    @DeleteMapping("/course/delete")
    public ResponseEntity<String> delete(@RequestParam int id) {
        courseService.delete(id);
        return ResponseEntity.ok("Course deleted successfully");
    }
}
